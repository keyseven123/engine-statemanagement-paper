---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
```{r}
plot(cars)
plot(cars)
plot(cars)
plot(cars)
plot(cars)
cars
a = cars
View(a)
install.packages(influxdbr)
install.packages("influxdbr")
library(dplyr)
library(influxdbr)
install.packages("influxdbr")
library(dplyr)
library(influxdbr)
library(dplyr)
library(curl)
install.packages("curl")
library(dplyr)
library(curl)
install.packages("curl")
library(dplyr)
library(curl)
library(xts)
library(dplyr)
library(curl)
library(xts)
install.packages("influxdbr")
library(influxdbr)
library(xts)
# attach data "sample_matrix"
data("sample_matrix")
# create xts object
xts_data <- xts::as.xts(x = sample_matrix)
# assign some attributes
xts::xtsAttributes(xts_data) <- list(info = "SampleDataMatrix",
UnitTesting = TRUE,
n = 180,
source = "xts")
# print structure to inspect the object
str(xts_data)
con <- influx_connection(group = "admin")
con <- influx_connection(group = "admin")
con <- influx_connection(host = "localhost", port = 8086)
con <- influx_connection(host = "localhost", port = 8086)
show_databases(con = con)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
return_xts = FALSE)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
return_xts = FALSE)
result
View(result)
View(result)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
return_xts = TRUE)
result
View(result)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
return_xts = FALSE,
simplifyList = TRUE)
result
View(result)
plot(result.cpuTotalUsage)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
return_xts = TRUE)
result
View(result)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
simplifyList = TRUE,
return_xts = TRUE)
result
result[0]
View(sample_matrix)
View(result)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 10,
order_desc = TRUE,
return_xts = FALSE)
result
View(result)
View(sample_matrix)
View(result)
result[0]["time"]
result[0]
result[0].time
result["time"]
result$time
result
result[[1]]
result[[0]]
result[[2]]
result[[2]]
result[[1]]
result[[1]][[2]]
result[[1]][[2]]
result[[1]][[1]]
result[[1]]$time
len(result[[1]]$time)
length(result[[1]]$time)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = -1,
order_desc = TRUE,
return_xts = FALSE)
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
result
length(result[[1]]$time)
plot(result[[1]]$cpuTotalUsage)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
plot(result[[1]]$cpuTotalUsage)
# Basic scatter plot
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
mtcars
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
result[[1]]
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
result = result[[1]]
# fetch time series data by using the helper function `influx_select`
result <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
result = result[[1]]
result
# Basic scatter plot
ggplot(result, aes(x=cpuTotalUsage, y=iteration)) + geom_point()
# Basic scatter plot
ggplot(result, aes(x=iteration, y=cpuTotalUsage)) + geom_point()
# Basic scatter plot
ggplot(result, aes(x=iteration, y=cpuTotalUsage)) + geom_point(size=2, shape=23)
library(ggplot2)
ggplot(result, aes(x=iteration, y=cpuTotalUsage)) + geom_point(size=2, shape=23)
library(ggplot2)
ggplot(result, aes(x=iteration, y=cpuTotalUsage)) + geom_point(size=1, shape=23)
ggplot(result, aes(x=iteration, y=runtime(ms))) + geom_point(size=1, shape=23)
ggplot(result, aes(x=iteration, y='runtime(ms)')) + geom_point(size=1, shape=23)
ggplot(result, aes(x=iteration, y=runtime) + geom_point(size=1, shape=23)
library(ggplot2)
ggplot(result, aes(x=iteration, y=c"puTotalUsage")) + geom_point(size=1, shape=23)
library(ggplot2)
ggplot(result, aes(x=iteration, y="cpuTotalUsage")) + geom_point(size=1, shape=23)
library(ggplot2)
ggplot(result, aes(x=iteration, y=cpuTotalUsage)) + geom_point(size=1, shape=23)
ggplot(result, aes(x=iteration, y=runtime\(ms\)) + geom_point(size=1, shape=23)
ggplot(result, aes(x=iteration, y=expression("runtime(ms)")) + geom_point(size=1, shape=23)
ggplot(result, aes(x=iteration, y=expression(runtime(ms))) + geom_point(size=1, shape=23)
ggplot(result, aes_string(x="iteration", y="runtime(ms)") + geom_point(size=1, shape=23)
ggplot(result, aes_string(x="iteration", y="runtime(ms)")) + geom_point(size=1, shape=23)
ggplot(result, aes_string(x="iteration", y="runtime\(ms\)")) + geom_point(size=1, shape=23)
ggplot(result, aes_string(x="iteration", y="rxBytes")) + geom_point(size=1, shape=23)
# fetch time series data by using the helper function `influx_select`
dfProm <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfProm = dfProm[[1]]
dfNes <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksNesMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfNes = dfNes[[1]]
dfProm
dfNes
library(ggplot2)
ggplot(dfNes, aes(x=iteration, y=cpuTotalUsage)) + geom_point(size=1, shape=23)
# fetch time series data by using the helper function `influx_select`
dfResult <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1' OR description = '1Crd2WrksNesMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfResult
# fetch time series data by using the helper function `influx_select`
dfResult <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1' OR description = '1Crd2WrksNesMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfResult = dfResult[[1]]
# fetch time series data by using the helper function `influx_select`
dfResult <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1' OR description = '1Crd2WrksNesMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfResult = dfResult[[1]]
dfResult
library(ggplot2)
ggplot(dfResult, aes(x=iteration, y=cpuTotalUsage, color=description, shape=description)) + geom_point(size=1, shape=23)
library(ggplot2)
ggplot(dfResult, aes(x=iteration, y=cpuTotalUsage, color=description, shape=description)) + geom_point(size=1, shape=2)
library(ggplot2)
ggplot(dfResult, aes(x=iteration, y=cpuTotalUsage, color=description, shape=description)) + geom_point(size=1)
library(ggplot2)
ggplot(dfResult, aes(x=iteration, y=cpuTotalUsage, color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=rxBytes, color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=txBytes, color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=rxPackets, color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=memoryUsage, color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=runtime(ms), color=description)) + geom_point(size=1)
ggplot(dfResult, aes_string(x=iteration, y="runtime(ms)", color=description)) + geom_point(size=1)
ggplot(dfResult, aes_string(x="iteration", y="runtime(ms)", color="description")) + geom_point(size=1)
ggplot(dfResult, aes_string(x="iteration", y="runtime\\(ms\\)", color="description")) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=runtime\(ms\), color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=runtime\\(ms\\), color=description)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=`runtime(ms)`, color=description)) + geom_point(size=1)
library(dplyr)
library(curl)
library(xts)
library(dplyr)
library(curl)
library(xts)
library(dplyr)
library(curl)
library(influxdbr)
library(xts)
library(ggplot2)
con <- influx_connection(host = "localhost", port = 8086)
show_databases(con = con)
# fetch time series data by using the helper function `influx_select`
dfResult <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "description = '1Crd2WrksPrometheusMetricsV1' OR description = '1Crd2WrksNesMetricsV1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfResult = dfResult[[1]]
dfResult
# fetch time series data by using the helper function `influx_select`
dfResult <- influx_select(con = con,
db = "mydb",
field_keys = "*",
measurement = "monitoringEval",
where = "topology = '1Crd2Wrks' AND version = '1'",
limit = 0,
order_desc = TRUE,
return_xts = FALSE)
dfResult = dfResult[[1]]
dfResult
ggplot(dfResult, aes(x=iteration, y=cpuTotalUsage, color=system)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=rxBytes, color=system)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=txBytes, color=system)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=rxPackets, color=system)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=memoryUsage, color=system)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=`runtime(ms)`, color=system)) + geom_point(size=1)
ggplot(dfResult, aes(x=iteration, y=`runtime_ms`, color=system)) + geom_point(size=1)
library(dplyr)
library(curl)
library(influxdbr)
library(xts)
library(ggplot2)
library(dplyr)
library(curl)
library(influxdbr)
library(xts)
library(ggplot2)
con <- influx_connection(host = "localhost", port = 8086)
show_databases(con = con)
