# ~~~ Configurations for the NES Worker ~~~

# ~~ IPs and Ports ~~
# Set worker IP
#localWorkerIp: 127.0.0.1

# Set IP address of NES Coordinator to which the NES Worker should connect
#coordinatorIp: 127.0.0.1

# Set RPC Server port of NES Coordinator to which the NES Worker should connect
# Needs to be the same as rpcPort in Coordinator
#coordinatorPort: 4000

# Set RPC server port of NES Worker
#rpcPort: 3000

# Set the data port of the NES Worker
#dataPort: 3001

# ~~~ Physical Stream Configurations ~~~

# A Physical Stream may be associated with multiple Instances of a logicalStreamName, a physicalStreamName and a SourceType
# If no Physical Stream Config is given, the worker will be created without a physical stream
# Available source Types: DefaultSource, CSVSource, MQTTSource, SenseSource, OPCSource (ToDo: Make source available),
#                         ZMQSource (ToDo: Make source available), KafkaSource (ToDo: Make source available),
#                         BinarySource (ToDo: Make source available))
physicalSources:
  - logicalSourceName: ls
    physicalSourceName: ps
    type: LoRaWANProxySource
    configuration:
      networkStack: ChirpStack
      ## set url to MQTT endpoint of networkstack. This is to send and receive packets
      url: tcp://192.168.129.1:1883
      ## Set userName for LoRaWANProxySource
      userName: admin
      ## Set password for LoRaWANProxySource
      password: admin
      ## Set appId for the configured application for the LoRaWANProxySource
      appId: 125b0092-3243-46b7-937e-bc55486e6788
      ## Files needed for secure mqtt connection
      ## Path to folder containing ca file
      CAPath: /Users/flapkap/Desktop/
      ## Path for certificate
      certPath: /Users/flapkap/Desktop/cert.pem
      ## Path for host
      keyPath: /Users/flapkap/Desktop/key.pem
      ## configure known devices
      deviceEUIs:
        - 70b3d549938ea1ee
      ## configure which fields the sensors on the ED corresponds to in the schema
      ## for example if config on sensor has 'sensors: ["ESP32Temperature"]
      ## then the value from that sensor will be mapped to the "temperature" field in the logical schema
      sensorFields:
        - temperature
