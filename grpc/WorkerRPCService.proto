/*
    Copyright (C) 2020 by the NebulaStream project (https://nebula.stream)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

syntax = "proto3";
import "SerializableQueryPlan.proto";
import "SerializableOperator.proto";
import "SerializableDataType.proto";
import "SerializableQueryReconfigurationPlan.proto";

service WorkerRPCService {
  rpc DeployQuery (DeployQueryRequest) returns (DeployQueryReply) {}
  rpc UndeployQuery (UndeployQueryRequest) returns (UndeployQueryReply) {}

  rpc RegisterQuery (RegisterQueryRequest) returns (RegisterQueryReply) {}
  rpc UnregisterQuery (UnregisterQueryRequest) returns (UnregisterQueryReply) {}
  rpc UnregisterQuerySubPlan (UnregisterQuerySubPlanRequest) returns (UnregisterQuerySubPlanReply) {}

  rpc RegisterQueryForReconfiguration (RegisterQueryRequest) returns (RegisterQueryReply) {}
  rpc StartQueryReconfiguration (StartQueryReconfigurationRequest) returns (StartQueryReconfigurationReply) {}

  rpc StartQuery (StartQueryRequest) returns (StartQueryReply) {}
  rpc StopQuery (StopQueryRequest) returns (StopQueryReply) {}
  rpc StopQuerySubPlan (StopQuerySubPlanRequest) returns (StopQuerySubPlanReply) {}

  rpc RegisterMonitoring (MonitoringRegistrationRequest) returns (MonitoringRegistrationReply) {}
  rpc GetMonitoringData (MonitoringDataRequest) returns (MonitoringDataReply) {}
}

message StartQueryReconfigurationRequest {
  NES.SerializableQueryReconfigurationPlan reconfigurationPlan = 1;
}

message StartQueryReconfigurationReply {
  bool success = 1;
}

message DeployQueryRequest {
  NES.SerializableQueryPlan queryPlan = 3;
}

message DeployQueryReply {
  bool success = 1;
}

message UndeployQueryRequest {
  uint64 queryId = 1;
}

message UndeployQueryReply {
  bool success = 1;
}

message RegisterQueryRequest {
  NES.SerializableQueryPlan queryPlan = 3;

}

message RegisterQueryReply {
  bool success = 1;
}

message UnregisterQueryRequest {
  uint64 queryId = 1;
}

message UnregisterQuerySubPlanRequest {
  uint64 querySubPlanId = 1;
}

message UnregisterQueryReply {
  bool success = 1;
}

message UnregisterQuerySubPlanReply {
  bool success = 1;
}

message StartQueryRequest {
  uint64 queryId = 1;
}

message StartQueryReply {
  bool success = 1;
}

message StopQueryRequest {
  uint64 queryId = 1;
}

message StopQuerySubPlanRequest {
  uint64 querySubPlanId = 1;
}

message StopQueryReply {
  bool success = 1;
}

message StopQuerySubPlanReply {
  bool success = 1;
}

message MonitoringRegistrationRequest {
  NES.SerializableMonitoringPlan monitoringPlan = 1;
}

message MonitoringRegistrationReply {
}

message MonitoringDataRequest {
}

message MonitoringDataReply {
  bytes buffer = 1;
}