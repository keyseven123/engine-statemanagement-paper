name: NES PR CI
on:
  push:
    branches:
      - xx-dependencies
jobs:
  validateTrigger:
    runs-on: [ vcpkg ]
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          sparse-checkout: |
            CHECKLIST.md
          sparse-checkout-cone-mode: false
          ssh-key: ${{ secrets.CI_SECRET }}
          ssh-strict: 'false'
      - name: Contextual QA Checklists
        if: github.event_name == 'pull_request'
        uses: wyozi/contextual-qa-checklist-action@1.3.2
        with:
          gh-token: ${{ secrets.NES_CI_SECRET }}
          comment-header: "Thank you for your PR. Please pay attention to the following items before merging:"

  docker-development-images-pre:
    name: "Build Development Images"
    runs-on: [ vcpkg, "${{ matrix.platform }}" ]
    strategy:
      matrix:
        platform: [ x64, arm64 ]
    needs: validateTrigger
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker/dependency
            vcpkg
      - name: Login to Docker Hub
        if: ${{ !env.act }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        if: ${{ !env.act }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nebulastream/nes-development-base:${{ github.ref_name }}-${{matrix.platform}}
          cache-to: type=registry,ref=nebulastream/nes-development-base-cache:${{ github.ref_name }}-${{matrix.platform}},mode=max
          cache-from: type=registry,ref=nebulastream/nes-development-base-cache:${{ github.ref_name }}-${{matrix.platform}}
          context: .
          file: docker/dependency/Base.dockerfile
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nebulastream/nes-development-dependency:${{ github.ref_name }}-${{matrix.platform}}
          cache-to: type=registry,ref=nebulastream/nes-development-dependency-cache:${{ github.ref_name }}-${{matrix.platform}},mode=max
          cache-from: type=registry,ref=nebulastream/nes-development-dependency-cache:${{ github.ref_name }}-${{matrix.platform}}
          build-args: |
            TAG=${{ github.ref_name }}-${{matrix.platform}}
            ARCH=${{matrix.platform}}
          context: .
          file: docker/dependency/Dependency.dockerfile
      - name: Build and push
        if: ${{ !env.act }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nebulastream/nes-development:${{ github.ref_name }}-${{matrix.platform}}
          cache-to: type=registry,ref=nebulastream/nes-development-cache:${{ github.ref_name }}-${{matrix.platform}},mode=max
          cache-from: type=registry,ref=nebulastream/nes-development-cache:${{ github.ref_name }}-${{matrix.platform}}
          build-args: TAG=${{ github.ref_name }}-${{matrix.platform}}
          context: .
          file: docker/dependency/Development.dockerfile

  docker-development-images:
    needs: docker-development-images-pre
    runs-on: [ vcpkg ]
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker/dependency
            vcpkg
      - name: Login to Docker Hub
        if: ${{ !env.act }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Combine Manifests
        run: |
          docker buildx imagetools create -t nebulastream/nes-development-base:${{ github.ref_name }} \
            nebulastream/nes-development-base:${{ github.ref_name }}-x64 \
            nebulastream/nes-development-base:${{ github.ref_name }}-arm64

          docker buildx imagetools create -t nebulastream/nes-development-dependency:${{ github.ref_name }} \
            nebulastream/nes-development-dependency:${{ github.ref_name }}-x64 \
            nebulastream/nes-development-dependency:${{ github.ref_name }}-arm64

          docker buildx imagetools create -t nebulastream/nes-development:${{ github.ref_name }} \
            nebulastream/nes-development:${{ github.ref_name }}-x64 \
            nebulastream/nes-development:${{ github.ref_name }}-arm64


  pre-build-checks:
    if: github.event_name != 'pull_request'
    needs: [ docker-development-images ]
    runs-on: [ vcpkg ]
    container:
      image: nebulastream/nes-development-dependency:${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake
        run: cmake -B build -S .
      - name: preamble-check
        run: python3 scripts/build/check_license.py . .no-license-check || exit 1
      - name: format-check
        run: |
          make format
          if ! git diff --quiet; then
            git status  # print unformatted files
            echo "Please run 'format' target locally before shipping your changes on remote"
            exit 1
          fi
      - name: guard-check
        run: |
          make fix-guards
          if ! git diff --quiet; then
            git status  # print files with non-conforming include guards
            echo "Please run 'fix-guards' target locally before shipping your changes on remote"
            exit 1
          fi
      - name: comment-format-check
        run: |
          make check-comment-format
          if [ $? -ne 0 ]; then
            echo "Please run 'check-comment-format' target locally before shipping your changes on remote"
            exit 1
          fi

  pre-build-checks-per-commit:
    if: github.event_name == 'pull_request'
    needs: [ docker-development-images ]
    runs-on: [ vcpkg ]
    container:
      image: nebulastream/nes-development-dependency:${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Format Checks
        run: |
          for commit in $(git rev-list ${{ github.base_ref }}..${{ github.head_ref }}); do
            git checkout $commit
            git ls-files '*.hpp' '*.cpp' | xargs clang-format-18 -i
          done

  build-linux:
    name: "Build ${{matrix.platform}}"
    needs: [ docker-development-images ]
    container:
      image: nebulastream/nes-development-dependency:${{ github.ref_name }}
    timeout-minutes: 40
    runs-on: [ vcpkg, "${{matrix.platform}}" ]
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
    steps:
      - uses: actions/checkout@v4
      - name: Configure NebulaStream
        run: cmake -B build -S . -DNES_USE_CCACHE=ON -DNES_ENABLE_EXPERIMENTAL_EXECUTION_MLIR=OFF
      - name: Build NebulaStream
        run: cmake --build build -j
      - name: Run Tests
        run: cmake --build build --target test -j

