/*
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

#pragma once

/// NOLINT(clang-diagnostic-error)
#ifndef INCLUDED_FROM_SOURCE_REGISTRY
#    error "This file should not be included directly! Include instead include SourceRegistry.hpp"
#endif

#include <string>

/// @Note: DO NOT MODIFY THIS FILE unless you are very sure that you need to.
/// We usually generate this file using the script in 'nes-plugins/Util/boostrapRegistry.py'
/// During our CMake build process, we use CMake codegen to generate an '.inc' file from this 'inc.in' file.
/// In that process, we generate and insert the function declarations for the register functions of the plugins
/// of this registry into the REGISTER_FUNCTION_DECLARATIONS placeholder.
/// Similarly, we insert the function calls of the register functions of the plugins of this registry into the
/// REGISTER_ALL_FUNCTION_CALLS placeholder. Inserting the function calls into the 'registerAll()' function means that
/// when we request an instance of this registry for the first time, we call 'registerAll()',
/// which then calls all register functions of all plugins of this registry, populating the registry.
namespace NES::Sources::SourceGeneratedRegistrar
{

/// declaration of register functions for 'Sources'
@REGISTER_FUNCTION_DECLARATIONS@
}

namespace NES
{
template <>
inline void
Registrar<NES::Sources::SourceRegistry, std::string, NES::Sources::SourceRegistryReturnType, NES::Sources::SourceRegistryArguments>::registerAll([[maybe_unused]] Registry<Registrar>& registry)
{

    using namespace NES::Sources::SourceGeneratedRegistrar;
    /// the SourceRegistry calls registerAll and thereby all the below functions that register Sources in the SourceRegistry
    @REGISTER_ALL_FUNCTION_CALLS@
}
}
